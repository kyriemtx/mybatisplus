package ${package}.${moduleName}.controller;

import java.util.Arrays;
import java.util.Map;

import ${mainPath}.common.validator.ValidatorUtils;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import com.baomidou.mybatisplus.mapper.EntityWrapper;

import ${package}.${moduleName}.entity.${className}Entity;
import ${package}.${moduleName}.entity.view.${className}View;

import ${package}.${moduleName}.service.${className}Service;
import ${mainPath}.common.utils.PageUtils;
import ${mainPath}.common.utils.BaseResult;
import ${mainPath}.common.utils.MPUtil;



/**
 * ${comments}
 * 后端接口
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@RequestMapping("${moduleName}/${pathName}")
public class ${className}Controller {
    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 列表
     */
    @RequestMapping("/page")
    @RequiresPermissions("${moduleName}:${pathName}:list")
    public BaseResult page(@RequestParam Map<String, Object> params,${className}Entity ${classname}){
 
        EntityWrapper< ${className}Entity> ew = new EntityWrapper< ${className}Entity>();
      	ew.allEq(MPUtil.allEQMapPre( ${classname}, "${classname}")); 
    	PageUtils page = ${classname}Service.queryPage(params, ew);
    
        return BaseResult.ok().put("page", page);
        
    }

	/**
     * 列表
     */
    @RequestMapping("/list")
    @RequiresPermissions("${moduleName}:${pathName}:list")
    public BaseResult list( ${className}Entity ${classname}){
       	EntityWrapper<  ${className}Entity> ew = new EntityWrapper<  ${className}Entity>();
      	ew.allEq(MPUtil.allEQMapPre( ${classname}, "${classname}")); 
        return BaseResult.ok().put("data",  ${classname}Service.selectListView(ew));
    }

	 /**
     * 查询
     */
    @RequestMapping("/query")
    @RequiresPermissions("${moduleName}:${pathName}:info")
    public BaseResult query(${className}Entity ${classname}){
        EntityWrapper< ${className}Entity> ew = new EntityWrapper< ${className}Entity>();
 		ew.allEq(MPUtil.allEQMapPre( ${classname}, "${classname}")); 
		${className}View  ${classname}View =  ${classname}Service.selectView(ew);
		return BaseResult.ok("查询${comments}成功").put("data",  ${classname}View);
    }
	
    /**
     * 信息
     */
    @RequestMapping("/info/{${pk.attrname}}")
    @RequiresPermissions("${moduleName}:${pathName}:info")
    public BaseResult info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
        ${className}Entity ${classname} = ${classname}Service.selectById(${pk.attrname});

        return BaseResult.ok().put("${classname}", ${classname});
    }

    /**
     * 保存
     */
    @RequestMapping("/save")
    @RequiresPermissions("${moduleName}:${pathName}:save")
    public BaseResult save(@RequestBody ${className}Entity ${classname}){
    	ValidatorUtils.validateEntity(${classname});
        ${classname}Service.insert(${classname});

        return BaseResult.ok();
    }

    /**
     * 修改
     */
    @RequestMapping("/update")
    @RequiresPermissions("${moduleName}:${pathName}:update")
    public BaseResult update(@RequestBody ${className}Entity ${classname}){
        ValidatorUtils.validateEntity(${classname});
        ${classname}Service.updateAllColumnById(${classname});//全部更新
        
        return BaseResult.ok();
    }

    /**
     * 删除
     */
    @RequestMapping("/delete")
    @RequiresPermissions("${moduleName}:${pathName}:delete")
    public BaseResult delete(@RequestBody ${pk.attrType}[] ${pk.attrname}s){
        ${classname}Service.deleteBatchIds(Arrays.asList(${pk.attrname}s));

        return BaseResult.ok();
    }

}
